/*
*	New C++ File starts here.
*	This file should be named message.cc
*	Automatically generated by NML CodeGen Java Applet.
*	with command line arguments :  HHFile=message.hpp
*
*	.gen script :
*		0:load message.hpp
*		1:clear
*		2:select_from_file message.hpp
*		3:generate C++ protos>message_n_codegen_protos.hh
*		4:generate C++ format>message_n.cc
*		5:generate C++ update>message_n.cc
*		6:generate C++ constructor>message_n.cc
*		7:exit
*
*/

// Include all NML, CMS, and RCS classes and functions
#include "rcs.hh"

// Include command and status message definitions
#include "message.hpp"

// Include externally supplied prototypes
#include "message_n_codegen_protos.hh"



#ifndef MESSAGE_NAME_LIST_LENGTH
#define MESSAGE_NAME_LIST_LENGTH 2
#endif

const NMLTYPE message_id_list[MESSAGE_NAME_LIST_LENGTH]= {
	EXAMPLE_MSG_TYPE, /* 0,101 */
	-1};
const size_t message_size_list[MESSAGE_NAME_LIST_LENGTH]= {
	sizeof(message),
	0};


// Enumerated Type Constants

/*
Estimated_size	message	140
Estimated_size	MAXIMUM	140
*/
/*
*	NML/CMS Format function : message_format
*/
int message_format(NMLTYPE type, void *buffer, CMS *cms)
{

	type = cms->check_type_info(type,buffer,"message",
		(cms_symbol_lookup_function_t) 0,
		(const char **) 0,
		message_id_list,message_size_list,
		MESSAGE_NAME_LIST_LENGTH,
		0);

	switch(type)
	{
	case EXAMPLE_MSG_TYPE:
		((message *) buffer)->update(cms);
		break;

	default:
		return(0);
	}
	return 1;
}

/*
*	NML/CMS Update function for message
*	from message.hpp:0
*/
void message::update(CMS *cms)
{

	cms->beginClass("message","NMLmsg");
	cms->update_with_name("index",index);
	cms->update_dla_length_with_name("text_length",text_length);
	cms->update_dla_with_name("text",text,text_length,100);

	cms->endClass("message","NMLmsg");

}

